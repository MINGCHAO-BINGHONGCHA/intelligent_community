<robot name="car_base" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:property name="PI" value="3.1415927"/>

    <material name="black">
        <color rgba="0.0 0.0 0.0 1.0" />
    </material>

    <xacro:property name="base_footprint_radius" value="0.001" />
    <xacro:property name="base_link_radius" value="0.1" />
    <xacro:property name="base_link_length" value="0.08" />
    <xacro:property name="earth_space" value="0.015" />
    <xacro:property name="base_link_m" value="0.5" />

    <link name="base_footprint">
      <visual>
        <geometry>
          <sphere radius="${base_footprint_radius}" />
        </geometry>
      </visual>
    </link>

    <link name="base_link">
      <visual>
        <geometry>
          <cylinder radius="${base_link_radius}" length="${base_link_length}" />
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <material name="yellow">
          <color rgba="0.8 0.3 0.1 1.0" />
        </material>
      </visual>
      <collision>
        <geometry>
          <cylinder radius="${base_link_radius}" length="${base_link_length}" />
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0" />
      </collision>
      <xacro:cylinder_inertial_matrix m="${base_link_m}" r="${base_link_radius}" h="${base_link_length}" />
    </link>
    
    <gazebo reference="base_link">
        <material>Gazebo/Orange</material>
    </gazebo>

    <joint name="base_link_to_base_footprint" type="fixed">
      <parent link="base_footprint" />
      <child link="base_link" />
      <origin xyz="0 0 ${earth_space + base_link_length / 2 }" />
    </joint>

    <xacro:property name="wheel_radius" value="0.0325" />
    <xacro:property name="wheel_length" value="0.015" />
    <xacro:property name="wheel_m" value="0.05" />
    <!-- 新增：轮距（左右轮距离） -->
    <xacro:property name="wheel_separation" value="${2 * base_link_radius}" />

    <xacro:macro name="add_wheels" params="name flag">
      <link name="${name}_wheel">
        <visual>
          <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_length}" />
          </geometry>
          <origin xyz="0.0 0.0 0.0" rpy="${PI / 2} 0.0 0.0" />
          <material name="black" />
        </visual>
        <collision>
          <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_length}" />
          </geometry>
          <origin xyz="0.0 0.0 0.0" rpy="${PI / 2} 0.0 0.0" />
        </collision>
        <xacro:cylinder_inertial_matrix m="${wheel_m}" r="${wheel_radius}" h="${wheel_length}" />
      </link>

      <gazebo reference="${name}_wheel">
        <material>Gazebo/Red</material>
      </gazebo>

      <joint name="${name}_wheel_to_base_link" type="continuous">
        <parent link="base_link" />
        <child link="${name}_wheel" />
        <origin xyz="0 ${flag * base_link_radius} ${-(earth_space + base_link_length / 2 - wheel_radius) }" />
        <axis xyz="0 1 0" />
      </joint>
    </xacro:macro>
    <xacro:add_wheels name="left" flag="1" />
    <xacro:add_wheels name="right" flag="-1" />

    <xacro:property name="support_wheel_radius" value="0.0075" />
    <xacro:property name="support_wheel_m" value="0.03" />

    <xacro:macro name="add_support_wheel" params="name flag" >
      <link name="${name}_wheel">
        <visual>
            <geometry>
                <sphere radius="${support_wheel_radius}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="black" />
        </visual>
        <collision>
            <geometry>
                <sphere radius="${support_wheel_radius}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
        </collision>
        <xacro:sphere_inertial_matrix m="${support_wheel_m}" r="${support_wheel_radius}" />
      </link>

      <gazebo reference="${name}_wheel">
        <material>Gazebo/Red</material>
      </gazebo>

      <joint name="${name}_wheel_to_base_link" type="continuous">
          <parent link="base_link" />
          <child link="${name}_wheel" />
          <origin xyz="${flag * (base_link_radius - support_wheel_radius)} 0 ${-(base_link_length / 2 + earth_space / 2)}" />
          <axis xyz="1 1 1" />
      </joint>
    </xacro:macro>

    <xacro:add_support_wheel name="front" flag="1" />
    <xacro:add_support_wheel name="back" flag="-1" />

    <!-- 新增：控制器配置 -->
    <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <!-- 调试与命名空间配置 -->
        <rosDebugLevel>na</rosDebugLevel>
        <tf_prefix></tf_prefix>
        
        <!-- 话题配置 -->
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        
        <!-- 坐标系配置 -->
        <odometryFrame>odom</odometryFrame>
        <robotBaseFrame>base_footprint</robotBaseFrame>
        
        <!-- 发布配置 -->
        <publishWheelTF>false</publishWheelTF>
        <publishOdomTF>true</publishOdomTF>
        <publishWheelJointState>true</publishWheelJointState>
        
        <!-- 物理参数（根据模型实际参数配置） -->
        <wheelSeparation>${wheel_separation}</wheelSeparation>
        <wheelDiameter>${2 * wheel_radius}</wheelDiameter>
        <wheelAcceleration>1.0</wheelAcceleration>
        <wheelTorque>20</wheelTorque>
        
        <!-- 更新频率 -->
        <updateRate>50.0</updateRate>
        
        <!-- 里程计来源（1=编码器，0=世界坐标） -->
        <odometrySource>1</odometrySource>
        
        <!-- 轮关节名称（必须与模型中的关节名一致） -->
        <leftJoint>left_wheel_to_base_link</leftJoint>
        <rightJoint>right_wheel_to_base_link</rightJoint>
    </plugin>
</gazebo>

    <!-- 惯性矩阵宏定义（确保存在） -->
    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r + h*h)/12}" ixy="0" ixz="0"
                     iyy="${m*(3*r*r + h*h)/12}" iyz="0"
                     izz="${m*r*r/2}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                     iyy="${2*m*r*r/5}" iyz="0"
                     izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>
    
</robot>